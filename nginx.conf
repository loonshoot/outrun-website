# Removed user directive as we're running in an unprivileged container
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /tmp/nginx.pid;  # Use /tmp instead of /var/run

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log debug;

    sendfile on;
    keepalive_timeout 65;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        listen 80 default_server;
        listen [::]:80 default_server;  # IPv6 support
        server_name _;  # Accept any hostname
        root /usr/share/nginx/html;

        # Handle both .html and non-.html URLs
        location / {
            # First try to find the exact URI
            try_files $uri.html $uri $uri/ /index.html =404;

            # If it ends with .html, redirect to non-.html version
            if ($request_uri ~ ^/(.*)\.html$) {
                return 301 /$1;
            }
        }

        # Handle favicon.ico
        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        # Error pages with detailed logging
        error_page 404 /404.html;
        error_page 502 /502.html;
        error_page 500 503 504 /50x.html;

        location = /50x.html {
            root /usr/share/nginx/html;
            internal;
        }

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN";
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Content-Type-Options "nosniff";
    }
} 