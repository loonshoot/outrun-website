<div class="relative overflow-hidden bg-gray-200">
  <div class="container mx-auto pt-5">
    <!-- Container for the card carousel -->
    <div class="flex flex-row flex-nowrap transition-transform duration-300 ease-in-out overflow-x-auto md:overflow-hidden" id="cardCarousel">
      <!-- Cards -->
      {% for card in cards %}
        <div class="border-light border-2 rounded-none card mr-4" style="transform: translateX(0);">
          <div class="flex flex-col justify-between h-80">
            <!-- Card Content -->
            <div class="p-4 w-64">
              {% if card.image %} <img src="{{ card.image }}" alt="{{ card.title }} Image" class="w-full h-1/3 object-cover rounded-t-lg"> {% endif %}
              <h2 class="text-2xl font-semibold font-mono text-yellow-400">{{ card.title }}</h2>
              <p class="font-mono font-normal text-light">{{ card.description }}</p>
            </div>
            <div class="absolute bottom-0 left-0 p-4">
              {% bookshop "element/button" bind: card.button %}
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
    <div class="flex flex-row-reverse pt-5">
      <!-- Right arrow button for sliding cards -->
      <p class="text-light block md:hidden">
        Swipe →
      </p>
      <p class="text-light hidden md:block">
        <a id="nextCardButton" class="no-underline">
          More →
        </a>
      </p>
    </div>
  </div>
</div>
<script>
document.addEventListener("DOMContentLoaded", function () {
  var cardContainer = document.getElementById('cardCarousel');
  var cards = document.querySelectorAll('.card');
  var isAnimating = false; // Flag to prevent overlapping animations
  var transitionHandled = false; // Flag to track whether the transitionend event has been handled

  function slideAndRotate() {
    if (isAnimating || transitionHandled) return;
    isAnimating = true;

    // Slide all cards and the entire row to the left
    cards.forEach(function (card, index) {
      var marginRight = parseInt(getComputedStyle(card).marginRight);
      card.style.transition = 'transform 0.5s ease-in-out';
      card.style.transform = 'translateX(' + (-1 * (card.offsetWidth + marginRight)) + 'px)';
    });

    // cardContainer.style.transition = 'transform 0.5s ease-in-out';
    // cardContainer.style.transform = 'translateX(-16px)';

    // After the last card finishes transitioning, move the first card to the last position
    cards[0].addEventListener('transitionend', handleTransition);

    function handleTransition() {
      if (!transitionHandled) {
        transitionHandled = true;
        setTimeout(function () {
          cardContainer.appendChild(cardContainer.firstElementChild);
          cards.forEach(function (card) {
            card.style.transition = 'none';
            card.style.transform = 'translateX(0)';
          });
          cardContainer.style.transition = 'none';
          cardContainer.style.transform = 'translateX(0)';
          isAnimating = false;
          transitionHandled = false; // Reset the flag for the next button click
        }, 50); // Adjust the delay as needed
      }
      cards[0].removeEventListener('transitionend', handleTransition);
    }
  }

  // Attach the event listener to the button
  var nextCardButton = document.getElementById('nextCardButton');
  if (nextCardButton) {
    nextCardButton.addEventListener('click', function () {
      slideAndRotate();
    });
  }
});


</script>